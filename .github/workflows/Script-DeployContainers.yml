name: Script Deploy Container
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Crear carpeta remota del proyecto si no existe
        run: |
          ssh -o StrictHostKeyChecking=no -p 5122 deploy@sylvahabitat.duckdns.org "mkdir -p ${{ vars.DATA_PATH }}"

      - name: Generar archivo .env desde variables y secrets
        run: |
          echo "DATA_PATH=${{ vars.DATA_PATH }}" > .env
          echo "NETWORK_NAME=${{ vars.NETWORK_NAME }}" >> .env
          echo "MYSQL_DATABASE=${{ vars.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_USER=${{ vars.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "PUID=${{ vars.PUID }}" >> .env
          echo "PGID=${{ vars.PGID }}" >> .env
          echo "TZ=${{ vars.TZ }}" >> .env


      - name: Verificar archivos generados
        run: |
          ls -lh ./docker
          echo "Contenido del .env:"
          cat .env

      - name: Copiar archivos al servidor remoto
        run: |
          scp -P 5122 -o StrictHostKeyChecking=no docker/docker-compose.yml deploy@sylvahabitat.duckdns.org:${{ vars.DATA_PATH }}
          scp -P 5122 -o StrictHostKeyChecking=no .env deploy@sylvahabitat.duckdns.org:${{ vars.DATA_PATH }}
          ssh -o StrictHostKeyChecking=no -p 5122 deploy@sylvahabitat.duckdns.org "chmod 600 ${{ vars.DATA_PATH }}.env"

      - name: Verificar archivos en servidor remoto
        run: |
          ssh -o StrictHostKeyChecking=no -p 5122 deploy@sylvahabitat.duckdns.org "ls -lh ${{ vars.DATA_PATH }}"
          
      - name: Desplegar en servidor remoto
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: sylvahabitat.duckdns.org
          username: deploy
          port: 5122
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ vars.DATA_PATH }}
            docker compose --env-file .env -f docker-compose.yml up -d --build
